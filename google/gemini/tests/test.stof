//
// Copyright 2024 Formata, Inc. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

import './question' as Gemini.Connectors;
import pkg 'google/gemini' as Gemini;
import pkg 'connector' as Formata;


#[run]
Formata.Context context: {
    #[api]
    Gemini.GContextStorage gemini: {}

    #[storage('keys')]
    Keys: {
        gemini: 'GEMINI API KEY'
    }
}


#[run(1)]
Gemini.Connectors.Question how_tall: {
    context: super.context
    question: 'On average, how tall are dogs?'
}

#[run(2)]
Gemini.Connectors.Question tallest: {
    context: super.context
    question: 'What is the tallest dog breed?'
}

#[run(3)]
Gemini.Connectors.Question summary: {
    context: super.context
    question: 'Can you summarize our conversation so far?'
}


#[test]
fn test() {
    self.exec();

    for (content in self.context.gemini.conversation) {
        let text = '';
        for (part in content.parts) text.push(part.text);
        pln(content.role, ': ', text);
    }
}
